<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           "
>

    <tx:annotation-driven />

    <!-- TransactionManager의 이름이 transactionManager라면 transaction-manager 속성 생략 가능 -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="count*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <bean id="duringAdvice" class="com.tobsec.service.DuringTimeAdvice" />

    <aop:config>
        <aop:pointcut id="servicePoint" expression="execution(* com.tobsec.service..*ServiceImpl.*(..))" />

        <!-- pointcut-ref인 경우 pointcut 객체(Customizing), ref가 안 붙으면 포인트컷 표현식 -->
        <aop:advisor advice-ref="txAdvice" pointcut="bean(confirmService)" />

        <aop:aspect id="measureAspect" ref="duringAdvice" order="0">
            <aop:around pointcut-ref="servicePoint" method="measure" />
        </aop:aspect>

    </aop:config>

    <context:component-scan base-package="com.tobsec">
        <context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
    </context:component-scan>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sqlService" class="com.tobsec.service.sql.SqlServiceImpl" />

    <bean id="sqlReader" class="com.tobsec.service.sql.reader.GensonSqlReader">
        <property name="configFile" value="sqlconfig/sqlMap.json" />
    </bean>

    <bean id="sqlRegistry" class="com.tobsec.service.sql.registry.HashMapSqlRegistry" />
    
    <!-- ConnectionBeanFactory를 통해 생성된 Bean 바로 사용 -->
    <!-- SpEl : #{}, Properties 사용 : ${} -->
    <bean id="dataSource" 
        class="org.apache.commons.dbcp2.BasicDataSource"
        destroy-method="close"
        p:url="#{connBeanFactory.getConnStr()}"
        p:driverClassName="#{connBeanFactory.getClassName()}"
        p:username="#{connBeanFactory.getUserName()}"
        p:password="#{connBeanFactory.getUserPass()}"
        p:maxIdle="10"
    />
    
    <bean id="levelUpStrategy" class="com.tobsec.service.StrategyFactory"
        factory-method="defaultStrategy"
    />

    <bean class="com.tobsec.common.LogApprovalProcessor" />
</beans>